/* Custom styles for audio-pdf-annotator */

/* Piano keyboard styles */
.piano-key.white-key {
  height: 160px;
  border-radius: 0 0 4px 4px;
  background: linear-gradient(to bottom, #fff 0%, #f5f5f5 100%);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

.piano-key.white-key:active,
.piano-key.white-key.active {
  background: linear-gradient(to bottom, #f0f0f0 0%, #e0e0e0 100%);
  transform: translateY(1px);
}

.piano-key.black-key {
  height: 80px; /* Set to 50% of white key height */
  background: linear-gradient(to bottom, #333 0%, #000 100%);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
  border-radius: 0 0 2px 2px;
  z-index: 2;
}

.piano-key.black-key:active,
.piano-key.black-key.active {
  background: linear-gradient(to bottom, #555 0%, #222 100%);
  transform: translateY(1px);
}

/* Piano scroll buttons */
.piano-keyboard-container .scroll-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

/* Piano container positioning */
.piano-container {
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0 -4px 10px rgba(0, 0, 0, 0.1);
  height: 176px; /* 160px for keys + 16px total padding */
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translateY(100%);
  visibility: hidden;
  /* Default state - no transition on initial load */
}

/* Show piano when active - entry animation */
.piano-container.active {
  transform: translateY(0);
  visibility: visible;
  transition: transform 0.3s ease, visibility 0s; /* Only slide animation */
}

/* Hide piano when inactive - exit animation */
.piano-container.was-active {
  transition: transform 0.3s ease, visibility 0s 0.3s; /* Delayed visibility change until after animation */
}

.piano-keyboard-container {
  width: 100%;
  position: relative;
  padding: 8px 0; /* Reduced padding */
}

.piano-keyboard-container .container {
  max-width: 1500px;
  width: 100%;
  margin: 0 auto;
  padding: 0 1rem;
}

/* PDF annotation styles */
.annotation-toolbar {
  background-color: rgba(249, 250, 251, 0.9); 
  backdrop-filter: blur(4px);
  border: 1px solid rgba(0, 0, 0, 0.1);
  max-width: 1600px;
  margin: 0 auto;
  width: 100%;
}

.annotation-layer {
  touch-action: none;
  pointer-events: auto !important;
  user-select: none;
}

.annotation-layer canvas {
  touch-action: none;
  pointer-events: auto !important;
}

/* Audio player styles */
.audio-player {
  background-color: rgba(249, 250, 251, 0.95);
  backdrop-filter: blur(8px);
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
  max-width: 1600px;
  margin: 0 auto;
  width: 100%;
}

.audio-player-container {
  transition: all 0.3s ease;
}

.audio-player-container.piano-open {
  margin-bottom: 176px; /* Match piano container height */
}

/* Volume slider styles */
.volume-slider-container {
  transition: opacity 0.2s ease;
}

.volume-slider,
.speed-slider,
.transpose-slider,
.balance-slider {
  background: white;
  border-radius: 6px;
  padding: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);
  z-index: 100;
  animation: slide-in 0.2s ease-out;
  transform-origin: bottom center;
}

/* Slider animations */
@keyframes slide-in {
  from {
    opacity: 0;
    transform: translateY(10px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Remove conflicting balance slider styles */
/* Balance slider width - inherits w-48 from component */
.balance-slider {
  /* Width now controlled by the w-48 class in component */
}

/* PDF Viewer */
.pdf-viewer-container .react-pdf__Document {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.pdf-viewer-container .react-pdf__Page {
  margin: 1rem 0;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  overflow: hidden;
}

/* Simple PDF Viewer enhanced styles */
.simple-pdf-viewer-container .react-pdf__Document {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0.5rem 0;
  width: 100%;
}

.simple-pdf-viewer-container .react-pdf__Page {
  margin: 0.5rem 0;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  overflow: hidden;
  transition: transform 0.3s ease-in-out, width 0.3s ease-in-out, height 0.3s ease-in-out;
  will-change: transform, width, height;
  max-width: 100%;
}

.simple-pdf-viewer-container .scale-transition {
  transform-origin: center center;
}

.pdf-page {
  transition: all 0.3s ease;
  transform-origin: center center;
  margin: 0 auto;
  display: flex;
  justify-content: center;
}

/* Fit width button specific style */
.fit-width-active .pdf-page {
  width: 100%;
}

/* PDF document container (removing visual container) */
.pdf-document-container {
  background-color: transparent;
  border: none !important;
  padding: 0;
  width: 100%;
  /* Improve touch handling */
  touch-action: pan-x pan-y;
}

/* Touch-specific PDF container - prevents browser gestures while allowing component gestures */
@media (hover: none) and (pointer: coarse) {
  .pdf-document-container {
    /* Allow pan but prevent browser pinch-zoom */
    touch-action: pan-x pan-y;
    -webkit-overflow-scrolling: touch;
  }
  
  /* When zooming, prevent any scroll behaviors */
  .pdf-document-container.zooming {
    touch-action: none;
  }
}

/* Mobile Optimization */
@media (max-width: 768px) {
  .annotation-toolbar {
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
  }
  
  .piano-key.white-key {
    width: 48px; /* Increased width */
  }
  
  .piano-key.black-key {
    width: 24px;
  }
  
  /* Compact audio player for mobile */
  .audio-player .flex {
    flex-wrap: nowrap;
    gap: 0.25rem;
  }
  
  .audio-player .text-xs {
    font-size: 0.65rem;
  }
}

/* Sticky controls */
.fixed.top-4.left-4,
.fixed.top-4.right-4 {
  /* Add shadow for better visibility */
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.25));
  transition: transform 0.2s ease, opacity 0.2s ease;
}

/* Button hover effect */
.fixed.top-4.left-4:hover,
.fixed.top-4.right-4 > button:hover {
  transform: scale(1.05);
}

/* Audio button hover states - improved contrast - REPLACED WITH NEW VARIABLES VERSION */
/* 
.audio-player .audio-control-button:not(.flex-grow):hover:not([data-state="active"]) {
  background-color: rgba(0, 0, 0, 0.08) !important;
  transition: background-color 0.2s ease;
}

.audio-player button[class*="ghost"].audio-control-button:not(.flex-grow):hover:not([data-state="active"]) {
  background-color: rgba(0, 0, 0, 0.08) !important;
}

.audio-player .audio-control-button:not(.flex-grow):not([data-state="active"]):hover::before {
  background-color: rgba(0, 0, 0, 0.08) !important;
}

.dark .audio-player .audio-control-button:not(.flex-grow):hover:not([data-state="active"]),
.dark .audio-player button[class*="ghost"].audio-control-button:not(.flex-grow):hover:not([data-state="active"]),
.dark .audio-player .audio-control-button:not(.flex-grow):not([data-state="active"]):hover::before {
  background-color: rgba(255, 255, 255, 0.15) !important;
}
*/

/* Audio control consistency - REPLACED WITH NEW VARIABLES VERSION */
/*
.audio-control-button {
  position: relative;
  height: 50px !important;
  padding: 20px !important;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

.audio-control-icon {
  margin-top: 6px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.audio-control-icon svg[data-lucide="rotate-ccw"],
.audio-control-icon svg[data-lucide="rotate-cw"] {
  height: auto !important;
  width: auto !important;
  margin-top: 0px;
  min-height: 24px;
  position: relative;
  top: 3px;
}

button:has(.audio-control-icon svg[data-lucide="rotate-ccw"]),
button:has(.audio-control-icon svg[data-lucide="rotate-cw"]) {
  min-width: 76px;
  padding: 0 10px;
}

button:has(.audio-control-icon svg[data-lucide="rotate-ccw"]) .audio-control-icon,
button:has(.audio-control-icon svg[data-lucide="rotate-cw"]) .audio-control-icon {
  height: 36px !important;
  display: flex;
  align-items: center;
  justify-content: center;
}

.audio-control-label {
  position: absolute;
  bottom: 4px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 11px;
  line-height: 1;
  white-space: nowrap;
  font-weight: 500;
  color: var(--muted-foreground, #71717a);
  text-align: center;
}

.audio-control-button .audio-control-icon.w-full {
  width: 100%;
}

.audio-control-label-left {
  position: absolute;
  bottom: 4px;
  left: 0;
  transform: none;
  font-size: 12px;
  line-height: 1;
  white-space: nowrap;
  font-weight: 400;
  color: var(--muted-foreground, #71717a);
  text-align: left;
}

.audio-control-label-right {
  position: absolute;
  bottom: 4px;
  right: 0;
  left: auto;
  transform: none;
  font-size: 12px;
  line-height: 1;
  white-space: nowrap;
  font-weight: 400;
  color: var(--muted-foreground, #71717a);
  text-align: right;
}

.play-pause-button {
  width: 56px !important;
}

.play-pause-button .audio-control-icon {
  height: 42px !important;
  margin-top: 5px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.play-pause-button svg[data-lucide="play"] {
  position: relative;
  left: 2px;
  height: auto !important;
  width: auto !important;
  margin-top: 0px;
  top: 3px;
}

.play-pause-button svg[data-lucide="pause"] {
  height: auto !important;
  width: auto !important;
  margin-top: 0px;
  top: 3px;
  position: relative;
}
*/

/* More CSS, keep unrelated styles */

/* 
 * Audio Controls - Unified button styling with CSS variables
 * This approach makes it easy to adjust positioning across all buttons
 */
:root {
  --button-height: 40px;
  --button-padding-bottom: 10px;
  --icon-container-height: 30px;
  --icon-vertical-offset: 0px;  /* General vertical position adjustment */
  --label-bottom-position: 4px;
  --label-font-size: 11px;
  --button-hover-bg: rgba(0, 0, 0, 0.08);
  --button-dark-hover-bg: rgba(255, 255, 255, 0.15);
}

/* Base button styling */
.audio-control-button {
  position: relative;
  height: var(--button-height) !important;
  padding-bottom: var(--button-padding-bottom) !important;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; /* Changed to center for better vertical alignment */
}

/* Icon container - centered by default */
.audio-control-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  height: var(--icon-container-height) !important;
  width: 100%;
  position: relative;
  top: var(--icon-vertical-offset);
}

/* Label styling */
.audio-control-label {
  position: absolute;
  bottom: var(--label-bottom-position);
  left: 50%;
  transform: translateX(-50%);
  font-size: var(--label-font-size);
  line-height: 1;
  white-space: nowrap;
  font-weight: 500;
  color: var(--muted-foreground, #71717a);
  text-align: center;
}

/* All SVG icons within buttons */
.audio-control-icon svg {
  position: relative;
  height: auto !important;
  width: auto !important;
  transition: transform 0.2s ease !important; /* Add transition for scaling to ALL icons */
}

/* Transport controls (rewind/forward) */
.audio-control-icon svg[data-lucide="rotate-ccw"],
.audio-control-icon svg[data-lucide="rotate-cw"] {
  /* transform: scale(3.0) !important; */
  /* width: 32px !important; */ /* Reverting width/height */
  /* height: 32px !important; */
  font-size: 32px !important; /* Trying font-size approach */
  width: 1em !important; /* Set width relative to font-size */
  height: 1em !important; /* Set height relative to font-size */
  min-height: auto;
}

/* Give more space to the rewind/forward buttons */
button:has(.audio-control-icon svg[data-lucide="rotate-ccw"]),
button:has(.audio-control-icon svg[data-lucide="rotate-cw"]) {
  min-width: 85px !important; /* Increased from 80px for larger icons */
  padding: 0 12px;
}

/* Ensure the icon container has enough space */
button:has(.audio-control-icon svg[data-lucide="rotate-ccw"]) .audio-control-icon,
button:has(.audio-control-icon svg[data-lucide="rotate-cw"]) .audio-control-icon {
  height: 48px !important; /* Increased container height further to 48px */
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: -5px; /* Keep vertical adjustment */
}

/* Play/Pause button */
.play-pause-button {
  width: 44px !important; /* Match rewind/forward width */
  min-width: 44px !important;
  padding: 0 !important; /* Match padding */
}

.play-pause-button .audio-control-icon {
  height: 44px !important; /* Match container height */
  width: 44px !important; /* Match container width */
  margin-top: -2px; /* Match vertical offset */
}

.play-pause-button .audio-control-icon svg {
  transform: none !important; 
  width: 38px !important;  
  height: 38px !important; 
  transition: transform 0.2s ease !important; /* Add transition for scaling */
}

/* Unified hover state: transparent background, scale icon */
.audio-player .audio-control-button:hover:not([data-state="active"]) {
  background-color: transparent !important; /* Override hover background for ALL */
}

.audio-player .audio-control-button:hover:not([data-state="active"]) .audio-control-icon svg {
  transform: scale(1.15) !important; /* Scale ALL icons on hover */
}

/* Pitch control (flat/sharp symbols) - make them bolder and bigger */
.transpose-control .audio-control-icon span {
  font-size: 1.2rem !important;
  font-weight: 600 !important;
  line-height: 1;
  display: inline-block;
  transform: scale(1.1);
}

/* Utility controls (smaller icons) */
.audio-control-icon svg:not([data-lucide="rotate-ccw"]):not([data-lucide="rotate-cw"]):not([data-lucide="play"]):not([data-lucide="pause"]) {
  transform: scale(1.0); /* Standard size for utility icons */
}

/* Hover states with improved contrast */
/* REMOVE Conflicting Hover states */
/*
.audio-player .audio-control-button:not(.play-pause-button):not(.flex-grow):hover:not([data-state="active"]) {
  background-color: var(--button-hover-bg) !important;
  transition: background-color 0.2s ease;
}

.audio-player button[class*="ghost"].audio-control-button:not(.play-pause-button):not(.flex-grow):hover:not([data-state="active"]) {
  background-color: var(--button-hover-bg) !important;
}
*/

/* Dark mode support */
.dark {
  --button-hover-bg: var(--button-dark-hover-bg);
}

/* Time labels for progress bar */
.audio-control-label-left,
.audio-control-label-right {
  position: absolute;
  bottom: var(--label-bottom-position);
  font-size: 12px;
  line-height: 1;
  white-space: nowrap;
  font-weight: 400;
  color: var(--muted-foreground, #71717a);
}

.audio-control-label-left {
  left: 0;
  text-align: left;
}

.audio-control-label-right {
  right: 0;
  text-align: right;
}

/* Seekbar (progress) specific styles */
.audio-control-button.flex-grow .audio-control-icon {
  width: 100%;
}

/* Mobile optimization */
@media (max-width: 768px) {
  :root {
    --button-height: 46px;
    --button-padding-bottom: 16px;
    --label-font-size: 10px;
  }
}

/* Simplified Styling using specific classes */

/* Target the icon container within the specific buttons */
.rewind-button .audio-control-icon,
.forward-button .audio-control-icon {
  height: 44px !important; /* Set desired container height */
  width: 44px !important; /* Set desired container width */
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: -2px; /* Adjusted vertical centering */
}

/* Target the SVG icons directly within those containers */
.rewind-button .audio-control-icon svg,
.forward-button .audio-control-icon svg {
  width: 30px !important;  /* Explicit width for SVG */
  height: 30px !important; /* Explicit height for SVG */
}

/* Adjust overall button size if needed */
.rewind-button,
.forward-button {
  min-width: 44px !important; /* Match the icon container width */
  width: 44px !important; /* Explicitly set width */
  padding: 0 !important; /* Remove horizontal padding */
}

/* Play/Pause button specific styles - ensure these don't conflict */
.play-pause-button {
  width: 56px !important;
}

.play-pause-button .audio-control-icon {
  /* Ensure Play/Pause container has its own height if needed */
  height: 42px !important; 
}

.play-pause-button .audio-control-icon svg {
  transform: none !important; /* Ensure no scale */
  width: 38px !important;  /* Increased SVG width */
  height: 38px !important; /* Increased SVG height */
}

/* Remove focus outlines/rings from audio buttons */
.audio-player .audio-control-button:focus,
.audio-player .audio-control-button:focus-visible,
.audio-player button:focus,
.audio-player button:focus-visible {
  outline: none !important;
  box-shadow: none !important; /* Override potential ring styles */
}

/* Specific padding and centering for Volume, Loop, Piano */
.volume-button,
.loop-button,
.piano-button {
  padding: 10px 0 !important; /* 10px top/bottom, 0px left/right */
  /* height: var(--button-height) !important; */ /* Inherit general button height (50px) */
}

.volume-button .audio-control-icon,
.loop-button .audio-control-icon,
.piano-button .audio-control-icon {
  height: 30px !important; /* Adjust container height for new padding (50 - 10 - 10) */
  margin-top: 0 !important; /* Remove specific margin-top to allow flex centering */
}

/* Ensure icon size is consistent for these buttons */
.volume-button .audio-control-icon svg,
.loop-button .audio-control-icon svg,
.piano-button .audio-control-icon svg {
  width: 20px !important;  /* Match size prop used in JSX */
  height: 20px !important; /* Match size prop used in JSX */
}

/* Control slot: fixed-size button area for uniform layout */
.control-slot {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 40px !important;
  height: 40px !important;
  padding: 0 !important;
}

/* Icon slot: fixed-size container to center the SVG or icon component */
.icon-slot {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px !important;
  height: 24px !important;
  position: relative !important; /* enable absolute positioning inside */
}

/* Numeric label for rewind/forward overlay */
.numeric-label {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 11px;
  font-weight: 500;
  line-height: 1;
  color: currentColor;
  pointer-events: none;
}

.rewind-button .icon-slot,
.forward-button .icon-slot {
  width: 32px !important;
  height: 32px !important;
}

.rewind-button .icon-slot svg,
.forward-button .icon-slot svg {
  width: 32px !important;
  height: 32px !important;
}

/* Play/Pause specific size override */
.control-slot.play-pause-button {
  width: 38px !important;
  height: 38px !important;
}

.play-pause-button .icon-slot {
  width: 38px !important;
  height: 38px !important;
}

.play-pause-button .icon-slot svg {
  width: 38px !important;
  height: 38px !important;
}

/* Ensure icon-slot SVGs have a transform transition */
.icon-slot svg {
  position: relative;
  /* height: auto and width: auto removed to allow explicit sizing */
  transition: transform 0.2s ease !important; /* Add transition for scaling to ALL icons */
}

/* Remove any hover background and zoom icon on hover for control-slot buttons */
.control-slot:hover:not([data-state="active"]) {
  background-color: transparent !important;
}

.control-slot:hover:not([data-state="active"]) .icon-slot svg {
  transform: scale(1.15) !important;
}

/* Centered numeric label overlay */
.numeric-label {
  transition: transform 0.2s ease !important;
}

/* On hover, scale numeric label like icon */
.control-slot:hover:not([data-state="active"]) .numeric-label {
  transform: translate(-50%, -50%) scale(1.15) !important;
}

/* Pitch icons (flat/sharp) hover zoom */
.transpose-control .audio-control-icon span {
  display: inline-block;
  transition: transform 0.2s ease !important;
}

.transpose-control .audio-control-button:hover:not([data-state="active"]) .audio-control-icon span {
  transform: scale(1.25) !important;
}

/* Control-with-label wrapper for icon + label */
.control-with-label {
  position: relative !important;
  display: inline-block !important;
  width: var(--button-height) !important;
  height: var(--button-height) !important;
}

/* Label below the control button */
.label-below {
  position: absolute !important;
  top: 100% !important;
  left: 50% !important;
  transform: translateX(-50%) !important;
  margin-top: 4px !important;
  font-size: var(--label-font-size) !important;
  font-weight: 500 !important;
  line-height: 1 !important;
  color: var(--muted-foreground, #71717a) !important;
  white-space: nowrap !important;
  user-select: none !important; /* Prevent text selection */
}

/* Center icons in balance, pitch, and speed buttons */
.control-with-label .audio-control-button {
  padding: 10px 0 !important;
}

/* Make icon container fill button and center icon vertically */
.control-with-label .audio-control-icon {
  flex: 1 1 auto !important;
  height: auto !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  margin: 0 !important;
}

/* Explicitly size loop and piano icons to 20x20 */
.control-slot.loop-button .icon-slot svg,
.control-slot.piano-button .icon-slot svg {
  width: 20px !important;
  height: 20px !important;
}
